
name: CI/CD - Production Environment

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend1: ${{ steps.filter.outputs.backend1 }}
      backend2: ${{ steps.filter.outputs.backend2 }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend1:
              - 'backend1/**'
            backend2:
              - 'backend2/**'
            frontend:
              - 'frontend/**'

  setup-and-bump-version:
    needs: changes
    if: needs.changes.outputs.backend1 == 'true' || needs.changes.outputs.backend2 == 'true' || needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies (root)
        run: yarn install --frozen-lockfile

      - name: Bump version (minor)
        id: setver
        run: |
          OUTPUT=$(node scripts/version-bump.js minor)
          echo "$OUTPUT"
          VERSION=$(echo "$OUTPUT" | sed -nE 's/^Bumped .* â†’ ([0-9]+\.[0-9]+\.[0-9]+)$/\1/p')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-push-backend1:
    needs: [changes, setup-and-bump-version]
    if: needs.changes.outputs.backend1 == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js for backend1
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (backend1)
        run: yarn install --frozen-lockfile

        working-directory: ./backend1

      - name: Build backend1
        run: npm run build
        working-directory: ./backend1

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend1
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend1:prod-${{ needs.setup-and-bump-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload backend1 build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend1-build-${{ needs.setup-and-bump-version.outputs.version }}
          path: ./backend1/dist

  build-and-push-backend2:
    needs: [changes, setup-and-bump-version]
    if: needs.changes.outputs.backend2 == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js for backend2
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (backend2)
        run: yarn install --frozen-lockfile

        working-directory: ./backend2

      - name: Build backend2
        run: npm run build
        working-directory: ./backend2

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          context: ./backend2
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend2:prod-${{ needs.setup-and-bump-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload backend2 build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend2-build-${{ needs.setup-and-bump-version.outputs.version }}
          path: ./backend2/dist

  build-and-push-frontend:
    needs: [changes, setup-and-bump-version]
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (frontend)
        run: yarn install --frozen-lockfile

        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/frontend:prod-${{ needs.setup-and-bump-version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ needs.setup-and-bump-version.outputs.version }}
          path: ./
