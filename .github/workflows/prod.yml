name: CI/CD - Production Environment

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'

jobs:
  validate-prod-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate latest commit message (Conventional Commits)
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: '$COMMIT_MSG'"
          echo "$COMMIT_MSG" | grep -Eq '^(feat|fix|chore|docs|style|refactor|test|perf)(\(.+\))?: .+' || {
            echo " Commit message does not follow Conventional Commits."
            exit 1
          }

  build-and-push:
    runs-on: ubuntu-latest
    needs: validate-prod-commit
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - name: Build and push backend1 (prod)
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend1:${{ github.ref_name }}

      - name: Build and push backend2 (prod)
        uses: docker/build-push-action@v5
        with:
          context: ./backend2
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend2:${{ github.ref_name }}

      - name: Build and push frontend (prod)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/frontend:${{ github.ref_name }}
