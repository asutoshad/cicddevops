name: CI/CD - Dev Environment

on:
  push:
    branches:
      - dev
      - 'feature-*'
  pull_request:
    branches:
      - dev

jobs:
  validate-feature-push:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature-')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate latest non-merge commit message (Conventional Commits)
        run: |
          COMMIT_MSG=$(git log --no-merges -1 --pretty=%B)
          echo "Last non-merge commit message: '$COMMIT_MSG'"
          echo "$COMMIT_MSG" | grep -Eq '^(feat|fix|chore|docs|style|refactor|test|perf)(\(.+\))?: .+' || {
            echo " Commit message does not follow Conventional Commits."
            exit 1
          }

  build-and-push:
    runs-on: ubuntu-latest
    needs: [validate-feature-push]
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/heads/feature/')) &&
      (!startsWith(github.ref, 'refs/heads/feature-') || needs.validate-feature-push.result == 'success')


    env:
      TAG_PREFIX: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'feature' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CICD_USERNAME }}
          password: ${{ secrets.CICD_PASSWORD }}

      - name: Build and push backend1
        uses: docker/build-push-action@v5
        with:
          context: ./backend1
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend1:${{ env.TAG_PREFIX }}-${{ github.sha }}

      - name: Build and push backend2
        uses: docker/build-push-action@v5
        with:
          context: ./backend2
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/backend2:${{ env.TAG_PREFIX }}-${{ github.sha }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.CICD_USERNAME }}/frontend:${{ env.TAG_PREFIX }}-${{ github.sha }}
